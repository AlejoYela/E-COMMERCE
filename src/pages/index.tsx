import { GetServerSidePropsContext } from "next";
import Head from "next/head"
import Image from "next/image";
import { Grid,GridItem } from "@chakra-ui/react"
import { Header } from "@/components/Header";
import { TopBar } from "@/components/TopBar";
import { sluglify } from "@/utils/sluglify";

type Product = {
  id: number;
  title: string;
  price: number;
  description: string;
  category: string;
  image: string;
  rating: {
    count: number;
    rate: number;
  };
}

type Categories = "electronics" | "jewelery" | "men's clothing" | "women's clothing";

type Rating = Product["rating"];

type Props = {
  products: Product[],
  categories: Categories[]
}

export default function Home({ products, categories }: Props) {
  return (
    <>
      <Head>
        <title>eCommerce Project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <TopBar></TopBar>
        <Header></Header>
        <Grid templateColumns="540px 255px 255px" templateRows="200px 260px" gap="1rem">
          {categories.map((cat, key) => {
            const slug = sluglify(cat)
            const imageUrl = `/pic-categories-${slug}.png`
            if (key == 0){
              return <GridItem position="relative" w='100%' h='100%' bg='blue.500' rowSpan={2}  key={key}><Image src={imageUrl} alt={cat} fill={true}></Image></GridItem>
            }

            if (key == categories.length-1){
              return <GridItem position="relative" w='100%' h='100%' bg='blue.500' colSpan={2}  key={key}><Image src={imageUrl} alt={cat} fill={true}></Image></GridItem>
            }
            return <GridItem position="relative" w='100%' h='100%' bg='blue.500' key={key}><Image src={imageUrl} alt={cat} fill={true}></Image></GridItem>
          })}
        </Grid>
        {/* <ol>
          {products.map(product => {
            return <li key={product.id}><strong>{product.title}</strong></li>
          })}
        </ol> */}
      </main>
    </>
  )
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const products = await fetch("https://fakestoreapi.com/products")
    .then(res => res.json())
  const categories = await fetch("https://fakestoreapi.com/products/categories")
    .then(res => res.json())
  return {
    props: {
      products,
      categories
    }
  }
}
